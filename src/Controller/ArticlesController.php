<?php
/**
 * Created by PhpStorm.
 * User: wpanderson
 * Date: 9/19/18
 * Time: 1:29 PM
 */
// src/Controller/ArticlesController.php

namespace App\Controller;

class ArticlesController extends AppController
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->loadComponent('Paginator');
        // Flash allows for notifications.
        $this->loadComponent('Flash');
    }

    public function index()
    {
        $this->loadComponent('Paginator');
        $articles = $this->Paginator->paginate($this->Articles->find());
        $this->set(compact('articles'));
    }

    // When user clicks a slug allow them to view the article.
    public function view($slug = null)
    {
        $article = $this->Articles->findBySlug($slug)->firstOrFail();
        $this->set(compact('article'));
    }

    // Add action for allowing users to add their own articles
    public function add()
    {
        // PHP if statement
        $article = $this->Articles->newEntity();
        if ($this->request->is('post')) {
            // Debug to print stuff
            debug($this->request->getData());
            $article = $this->Articles->patchEntity($article, $this->request->getData());

            // Hardcoding user_id is temporary and will be changed with authenticator
            $article->user_id = 1;

            // Attempts to save an article if success notifies user and redirects
            if ($this->Articles->save($article)) {
                $this->Flash->success(__('Your article has been saved.'));
                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('Unable to add your article. :('));

        }
        // Set article for use inside the template.
        $this->set('article', $article);
    }
}
